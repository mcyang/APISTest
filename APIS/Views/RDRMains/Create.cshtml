@model APIS.ViewModels.RDRMainViewModel

@{
    ViewBag.Title = "Create";
}


<ol class="breadcrumb">
    <li><a href="#">MKT管理</a></li>
    <li><a href="#">RDR維護</a></li>
    <li><a href="#">新增RDR表單</a></li>
    <li class="active">新增專案基本資料</li>
</ol>

    @using (Html.BeginForm("Create","RDRMains",FormMethod.Post, new { id = "ListForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <table class="table table-bordered">
                <tr>
                    <td colspan="6" style="background-color:yellowgreen; font-size:larger; font-weight:bold; ">專案基本資料(<span style="color:red">*欄位必填)</span></td>
                </tr>
                <tr>
                    <th class="col-md-2">RDR#</th>
                    <td class="col-md-2">
                        <span style="color:red">系統自動編號</span>
                    </td>

                    <th class="col-md-2"><span style="color:red">*</span>LOB</th>
                    <td class="col-md-2">
                        @(Html.DDL_FromEnum<EnumLOB>("EnumLOBList", "", true, new { @class = "form-control" }))
                        @Html.Hidden("ddl_LOBText")
                    </td>

                    <th class="col-md-2"><span style="color:red">*</span>客戶群</th>
                    <td class="col-md-2">
                        <select id="CustomerTeamList", name="CustomerTeamList" class="form-control">
                            <option>-----</option>
                        </select>
                        @*@Html.DDL_CustomerTeam("CustomerTeamList" , 0, null, new { @class = "form-control" })*@
                        @Html.Hidden("ddl_CustomerTeamText")
                    </td>

                </tr>
                <tr>
                    <th><span style="color:red">*</span>專案名稱</th>
                    <td>
                        @Html.TextBoxFor(model => model.ProjectName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
                    </td>

                    <th><span style="color:red">*</span>業務</th>
                    <td>
                        @Html.TextBoxFor(model => model.CreateUserID, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CreateUserID, "", new { @class = "text-danger" })
                    </td>

                    <th><span style="color:red">*</span>量產地</th>
                    <td>
                        @(Html.DDL_FromEnum<EnumSite>("EnumSiteList", "", false, new { @class = "form-control" }))
                        @Html.Hidden("ddl_SiteText")
                    </td>
                </tr>
                <tr>
                    <th><span style="color:red">*</span>車廠</th>
                    <td>
                        @Html.DDL_CarMaker("CarMakerList", 0, false, new { @class = "form-control" })
                        @Html.Hidden("ddl_CarMakerText")
                    </td>

                    <th><span style="color:red">*</span>車型</th>
                    <td>
                        @Html.TextBoxFor(model => model.CarModel, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CarModel, "", new { @class = "text-danger" })
                    </td>

                    <th><span style="color:red">*</span>車型預估年銷售量</th>
                    <td>
                        @Html.TextBoxFor(model => model.EstimateSales, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.EstimateSales, "", new { @class = "text-danger" })                    
                    </td>
                </tr>
                <tr>
                    <th><span style="color:red">*</span>RFQ Date</th>
                    <td>
                        @Html.TextBoxFor(model => model.RFQDate, new { @class = "jqueryui-datepicker-normal form-control", placeholder = "yyyy-MM-dd" })
                        @Html.ValidationMessageFor(model => model.RFQDate, "", new { @class = "text-danger" })
                    </td>

                    <th><span style="color:red">*</span>報價需求日</th>
                    <td>
                        @Html.TextBoxFor(model => model.AcquisitionDate, new { @class = "jqueryui-datepicker-normal form-control", placeholder = "yyyy-MM-dd" })
                        @Html.ValidationMessageFor(model => model.AcquisitionDate, "", new { @class = "text-danger" })
                    </td>

                    <th></th>
                    <td></td>
                </tr>
                <tr>
                    <th><span style="color:red">*</span>SOP Date</th>
                    <td>
                        @Html.TextBoxFor(model => model.SOPDate, new { @class = "jqueryui-datepicker-compact form-control", placeholder = "yyyy-MM" })
                        @Html.ValidationMessageFor(model => model.SOPDate, "", new { @class = "text-danger" })
                    </td>

                    <th><span style="color:red">*</span>EOL Date</th>
                    <td>
                        @Html.TextBoxFor(model => model.EOLDate, new { @class = "jqueryui-datepicker-compact form-control", placeholder = "yyyy-MM" })
                        @Html.ValidationMessageFor(model => model.EOLDate, "", new { @class = "text-danger" })
                    </td>

                    <th><span style="color:red">*</span>把握度</th>
                    <td>
                        @(Html.DDL_FromEnum<EnumCertainty>("EnumCertaintyList", "", false, new { @class = "form-control" }))
                        @Html.Hidden("ddl_CertaintyText")
                    </td>
                </tr>
                <tr>
                    <th><span style="color:red">*</span>報價類型</th>
                    <td>
                        @(Html.DDL_FromEnum<EnumQuotation>("EnumQuotationList", "", false, new { @class = "form-control" }))
                        @Html.Hidden("ddl_QuotationText")
                    </td>

                    <th><span style="color:red">*</span>報價方式</th>
                    <td>
                        @(Html.DDL_FromEnum<EnumRequestType>("EnumRequestTypeList", "", false, new { @class = "form-control" }))
                        @Html.Hidden("ddl_RequestTypeText")
                    </td>

                    <th><span style="color:red">*</span>報價貨幣</th>
                    <td>
                        @(Html.DDL_FromEnum<EnumCurrency>("EnumCurrencyList", "", false, new { @class = "form-control" }))
                        @Html.Hidden("ddl_CurrencyText")
                    </td>
                </tr>
                <tr>
                    <th class="col-md-2"><span style="color:red">*</span>預估年營業額(NTD)</th>
                    <td class="col-md-3" colspan="5">
                        @* 這段還不夠好，最好自訂一個 RadioButtonList 來放，並搭配 Enum 使用 *@
                        <div class="revenuelist">
                            @Html.RadioButtonFor(model => model.EstimateRevenue, "1", new { id = "r1_EstimateRevenue", name = "EstimateRevenue" }) 小於2千萬
                            @Html.RadioButtonFor(model => model.EstimateRevenue, "2", new { id = "r2_EstimateRevenue", name = "EstimateRevenue" }) 2 - 5千萬
                            @Html.RadioButtonFor(model => model.EstimateRevenue, "3", new { id = "r3_EstimateRevenue", name = "EstimateRevenue" }) 5千萬 - 1億
                            @Html.RadioButtonFor(model => model.EstimateRevenue, "4", new { id = "r4_EstimateRevenue", name = "EstimateRevenue" }) 1億以上
                            @Html.ValidationMessageFor(model => model.EstimateRevenue, "", new { @class = "text-danger" })
                        </div>
                        @Html.Hidden("EstimateRevenueValue")
                    </td>
                </tr>
            </table>

            <div class="row">
                <div class="col-md-1">
                    @Html.ActionLink("返回", "Index", "RDRManage", null, new { @class = "btn btn-info" })
                </div>

                <div class="col-md-1">
                    <div>
                        <input type="submit" value="儲存" class="btn btn-success" />
                    </div>
                </div>
            </div>
        </div>
    }

@section scripts{
    <script type="text/javascript">
        $(function () {

            /* 日期選擇器(1): yy/mm/dd */
            $('#RFQDate').datepicker({
                dateFormat: "yy-mm-dd", //設定:日期格式
                changeYear: true,    //設定:可變更年份
                yearRange: '-5:+20', //設定:西元年範圍
                changeMonth: true,   //設定:可變更月份
                numberOfMonths: 2,
                onSelect: function (selected) {
                    $("#AcquisitionDate").datepicker("option", "minDate", selected)
                }
            });
            $("#AcquisitionDate").datepicker({
                dateFormat: "yy-mm-dd", //設定:日期格式
                changeYear: true,    //設定:可變更年份
                yearRange: '-5:+20', //設定:西元年範圍
                changeMonth: true,   //設定:可變更月份
                numberOfMonths: 2,
                onSelect: function (selected) {
                    $("#RFQDate").datepicker("option", "maxDate", selected)
                }
            });

            /* 日期選擇器(2): yy/mm */
            $('.jqueryui-datepicker-compact').datepicker({
                dateFormat: "yy-mm", //屬性設定:日期格式
                changeYear: true,    //屬性設定:可變更年份
                yearRange: '-5:+20', //屬性設定:西元年範圍
                changeMonth: true,   //屬性設定:可變更月份,
                showButtonPanel: true, //屬性設定: 於日期選擇器最下方產生 "Done" Button Panel,
                onClose:
                    function (dateText, inst) {    // 按下"Done"時,設定日期
                        var month = $("#ui-datepicker-div .ui-datepicker-month :selected").val();
                        var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
                        $(this).datepicker('setDate', new Date(year, month, 1)).trigger('change');
                    },
                beforeShow: function (input, inst) {
                    if ((datestr = $(this).val()).length > 0) {
                        year = datestr.substring(datestr.length - 4, datestr.length);
                        month = datestr.substring(0, 2);
                        $(this).datepicker('option', 'defaultDate', new Date(year, month - 1, 1));
                        $(this).datepicker('setDate', new Date(year, month - 1, 1));
                    }
                }
            }).focus(function () {
                $(".ui-datepicker-calendar").hide();
                $("#ui-datepicker-div").position({
                    my: "center top",
                    at: "center bottom",
                    of: $(this)
                });

                $('.ui-datepicker-close').click(function () {
                    var sDate = $('#SOPDate').val();
                    var eDate = $('#EOLDate').val();
                    if (sDate != "" && eDate != "")
                    {
                        //驗證: 前面日期必小於後面日期
                        if (checkEndTime(sDate, eDate) == false)
                        {
                            alert("SOP Date 不能大於 EOL Date！");
                            $('#EOLDate').val("");
                        }
                    }
                });
            });

            /*日期區間驗證: 前面日期必小於後面日期*/
            function checkEndTime(sDate, eDate) {
                var d1 = new Date(sDate.replace(/\-/g, "\/"));
                var d2 = new Date(eDate.replace(/\-/g, "\/"));

                if (d1 >= d2) {
                    return false;
                }
            }


            //CustomerTeamList init Text
            var team_selectedText = $('#CustomerTeamList option:selected').text();
            $('#ddl_CustomerTeamText').val(team_selectedText);

            //EnumLOBList init Text
            var Lob_selectedText = $('#EnumLOBList option:selected').text();
            $('#ddl_LOBText').val(Lob_selectedText);

            //EnumSiteList init Text
            var site_selectedText = $('#EnumSiteList option:selected').text();
            $('#ddl_SiteText').val(site_selectedText);

            //CarMakerList init Text
            var carmaker_selectedText = $('#CarMakerList option:selected').text();
            $('#ddl_CarMakerText').val(carmaker_selectedText);

            //EnumCertaintyList init Text
            var certainty_selectedText = $('#EnumCertaintyList option:selected').text();
            $('#ddl_CertaintyText').val(certainty_selectedText);

            //EnumQuotationList init Text
            var quotation_selectedText = $('#EnumQuotationList option:selected').text();
            $('#ddl_QuotationText').val(quotation_selectedText);

            //EnumRequestTypeList init Text
            var requestType_selectedText = $('#EnumRequestTypeList option:selected').text();
            $('#ddl_RequestTypeText').val(requestType_selectedText);

            //EnumCurrencyList init Text
            var currency_selectedText = $('#EnumCurrencyList option:selected').text();
            $('#ddl_CurrencyText').val(currency_selectedText);

            //EstimateRevenueList init checked
            var revenue_checked = $('.revenuelist input[type="radio"]:checked').val();
            $('#EstimateRevenueValue').val(revenue_checked);
        });

        //CustomerTeamList choose Text
        $('#CustomerTeamList').change(function () {
            var team_selectedText = $('#CustomerTeamList option:selected').text();
            $('#ddl_CustomerTeamText').val(team_selectedText);
        });

        //LOB下拉選單Change事件
        $('#EnumLOBList').change(function () {
            ChangeLOB();
        });

        /*LOB下拉選單選取事件*/
        function ChangeLOB() {
            //寫入Hidden標籤,用來傳到後端
            var selectedText = $('#EnumLOBList option:selected').text();
            $('#ddl_LOBText').val(selectedText);

            //選擇LOB後再產生CustomerTeam List
            var selectedValue = $('#EnumLOBList option:selected').val();
            if ($.trim(selectedValue).length > 0) {
                debugger
                GetCustomerTeamList(selectedValue);
            }
        }

        /*ajax取得CustomerTeam*/
        function GetCustomerTeamList(LOBID) {
            $.ajax({
                url: '@Url.Action("GetTeamsByLOB","CustomerTeams")',
                data: { LobID: LOBID },
                type: 'post',
                cache: false,
                async: false,
                dataType: 'json',
                success: function (data) {
                    if (data.length > 0)
                    {
                        $('#CustomerTeamList').empty();
                        $('#CustomerTeamList').append($('<option></option>').val('').text('請選擇客戶群'));
                        $.each(data, function (i, item) {
                            $('#CustomerTeamList').append($('<option></option>').val(item.Key).text(item.Value));
                        });
                    }
                },
                error: function (xhr, status, error) {
                    alert(xhr.responseText);
                }
            });
        }


        //EnumSiteList choose Text
        $('#EnumSiteList').change(function () {
            var site_selectedText = $('#EnumSiteList option:selected').text();
            $('#ddl_SiteText').val(site_selectedText);
        });

        //CarMakerList choose Text
        $('#CarMakerList').change(function () {
            var carmaker_selectedText = $('#CarMakerList option:selected').text();
            $('#ddl_CarMakerText').val(carmaker_selectedText);
        });

        //EnumCertaintyList choose Text
        $('#EnumCertaintyList').change(function () {
            var certainty_selectedText = $('#EnumCertaintyList option:selected').text();
            $('#ddl_CertaintyText').val(certainty_selectedText);
        });

        //EnumQuotationList choose Text
        $('#EnumQuotationList').change(function () {
            var quotation_selectedText = $('#EnumQuotationList option:selected').text();
            $('#ddl_QuotationText').val(quotation_selectedText);
        });

        //EnumRequestTypeList choose Text
        $('#EnumRequestTypeList').change(function () {
            var requestType_selectedText = $('#EnumRequestTypeList option:selected').text();
            $('#ddl_RequestTypeText').val(requestType_selectedText);
        });

        //EnumCurrencyList choose Text
        $('#EnumCurrencyList').change(function () {
            var currency_selectedText = $('#EnumCurrencyList option:selected').text();
            $('#ddl_CurrencyText').val(currency_selectedText);
        });

        //EstimateRevenueList checked
        $('.revenuelist input[type="radio"]').change(function () {
            var revenue_checked = $('.revenuelist input[type="radio"]:checked').val();
            $('#EstimateRevenueValue').val(revenue_checked);
        });
</script>
    }

